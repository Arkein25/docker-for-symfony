version: '2'

services:
    db:
        container_name: gb_pgsql
        image: postgres:9
        volumes:
            - ./data/db:/var/lib/postgresql
            - ./init.sql:/docker-entrypoint-initdb.d/init.sql
        environment:
            POSTGRES_DB: ${DB}
            POSTGRES_USER: ${DB_USER}
            POSTGRES_PASSWORD: ${DB_PASSWORD}
        ports:
            - 5432:5432
        networks:
            vpcbr:
                ipv4_address: 10.5.0.3
    redis:
        container_name: gb_redis
        image: redis:alpine
        ports:
            - 6379:6379
        networks:
            vpcbr:
                ipv4_address: 10.5.0.4
    php:
        container_name: gb_phpfpm
        build:
            context: php7-fpm
            args:
                TIMEZONE: ${TIMEZONE}
        networks:
            vpcbr:
                ipv4_address: 10.5.0.2
        volumes:
            - ${SYMFONY_APP_PATH}:/var/www/symfony
            - ./logs/symfony:/var/www/symfony/app/logs
        links:
            - redis
            - db
        environment:
            XDEBUG_CONFIG: remote_host=${IP_ADDRESS}

    nginx:
        container_name: gb_nginx
        build: nginx
        ports:
            - 80:80
        volumes_from:
            - php
        volumes:
            - ./logs/nginx/:/var/log/nginx
        networks:
            vpcbr:
                ipv4_address: 10.5.0.9

    sentry:
        container_name: gb_sentry
        image: sentry
        env_file:
            - sentry.env
        ports:
            - 9000:9000
        depends_on:
            - db
            - redis
        networks:
            vpcbr:
                ipv4_address: 10.5.0.5
    cron:
        container_name: gb_sentry-cron
        image: sentry
        env_file:
            - sentry.env
        command: run cron
        depends_on:
            - db
            - redis
        networks:
            vpcbr:
                ipv4_address: 10.5.0.6
    worker:
        container_name: gb_sentry-worker
        image: sentry
        env_file:
            - sentry.env
        command: run worker
        depends_on:
            - db
            - redis
        networks:
            vpcbr:
                ipv4_address: 10.5.0.7

networks:
    vpcbr:
        driver: bridge
        ipam:
            config:
            - subnet: 10.5.0.0/16
              gateway: 10.5.0.1
